<div class="Brands">
  <div class="heading">
    <span style="font-size: 30px;color:#1c1c1c;margin-top: 30px;">Top brands for you</span>
  </div>
  <div class="Res">
    <div class="wrapper">
      <div class="group" *ngFor="let group of groups; let i = index" [class.active]="i === currentGroupIndex">
        <div class="popular" *ngFor="let brand of group; let j = index" [class.active]="j === currentSlideIndex">
          <img [src]="brand.image" alt="Brand {{ i * itemsPerGroup + j + 1 }}" />
          <p>{{ brand.name }}</p>
        </div>
      </div>
    </div>
    <button class="next-btn1" (click)="nextSlide()">Next</button>
    <button class="prev-btn1" (click)="prevSlide()">Previous</button>
  </div>
</div>


import { Component, OnInit } from '@angular/core';
import { ApiService } from './api.service';

@Component({
  selector: 'app-brands-slider',
  templateUrl: './brands-slider.component.html',
  styleUrls: ['./brands-slider.component.css']
})
export class BrandsSliderComponent implements OnInit {
  brands: { image: string, name: string }[] = [];
  groups: { image: string, name: string }[][] = [];
  currentGroupIndex = 0;
  currentSlideIndex = 0;
  itemsPerGroup = 4;

  constructor(private apiService: ApiService) { }

  ngOnInit(): void {
    this.fetchBrands();
  }

  fetchBrands(): void {
    const apiUrl = 'YOUR_API_ENDPOINT'; // Replace with your API endpoint
    this.apiService.getBrands(apiUrl).subscribe(
      (brands: { image: string, name: string }[]) => {
        this.brands = brands;
        this.updateGroups();
      },
      (error) => {
        console.error('Error fetching brands:', error);
      }
    );
  }

  updateGroups(): void {
    this.groups = [];
    for (let i = 0; i < this.brands.length; i += this.itemsPerGroup) {
      this.groups.push(this.brands.slice(i, i + this.itemsPerGroup));
    }
  }

  nextSlide(): void {
    if (this.currentSlideIndex + 1 < this.itemsPerGroup) {
      this.currentSlideIndex++;
    } else {
      this.currentSlideIndex = 0;
      this.nextGroup();
    }
  }

  prevSlide(): void {
    if (this.currentSlideIndex > 0) {
      this.currentSlideIndex--;
    } else {
      this.currentSlideIndex = this.itemsPerGroup - 1;
      this.prevGroup();
    }
  }

  nextGroup(): void {
    if (this.currentGroupIndex + 1 < this.groups.length) {
      this.currentGroupIndex++;
    }
  }

  prevGroup(): void {
    if (this.currentGroupIndex > 0) {
      this.currentGroupIndex--;
    }
  }
}


import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class ApiService {

  constructor(private http: HttpClient) { }

  getImages(url: string): Observable<string[]> {
    return this.http.get<string[]>(url);
  }
}




.Brands {
  margin-top: 20px;
  margin-bottom: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.heading {
  margin-top: 30px;
}

.Res {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.wrapper {
  display: flex;
  flex-wrap: nowrap; /* Ensures items stay in a single row */
  overflow-x: hidden; /* Hide overflow */
}

.group {
  display: flex;
}

.popular {
  width: 25%; /* Each brand takes up 25% of the wrapper's width */
  padding: 10px;
  box-sizing: border-box;
  text-align: center;
}

.popular img {
  width: 100%;
  border-radius: 5px;
}

.next-btn1,
.prev-btn1 {
  margin-top: 10px;
  background-color: #ccc;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
}

.next-btn1:hover,
.prev-btn1:hover {
  background-color: #bbb;
}

.active {
  /* Add styles for active elements here, e.g., border or box-shadow */
}












.Brands {
  margin-top: 20px;
  margin-bottom: 20px;
}

.heading {
  text-align: center;
}

.Res {
  position: relative;
  overflow-x: hidden;
}

.wrapper {
  display: flex;
}

.group {
  display: flex;
  transition: transform 0.3s ease;
}

.popular {
  flex: 0 0 calc(33.33% - 20px); /* Adjust the width to fit three items per slide */
  padding: 0 10px;
  text-align: center;
}

.popular img {
  width: 100%; /* Adjust as needed */
  height: auto; /* Maintain aspect ratio */
  border-radius: 5px;
}

.popular p {
  margin-top: 5px;
  font-size: 14px;
}

.next-btn1,
.prev-btn1 {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 40px;
  height: 40px;
  border: none;
  background-color: transparent;
  color: #333;
  font-size: 20px;
  cursor: pointer;
}

.next-btn1 {
  right: 0;
}

.prev-btn1 {
  left: 0;
}
